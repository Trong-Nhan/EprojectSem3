




















// This file was automatically generated by the PetaPoco T4 Template
// Do not make changes directly to this file - edit the template instead
// 
// The following connection settings were used to generate this file
// 
//     Connection String Name: `OnlineOrdersConnection`
//     Provider:               `System.Data.SqlClient`
//     Connection String:      `Data Source=DESKTOP-RTQ2N2T;Initial Catalog=OnlineOrders;Integrated Security=True`
//     Schema:                 ``
//     Include Views:          `False`



using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using PetaPoco;

namespace OnlineOrdersConnection
{

	public partial class OnlineOrdersConnectionDB : Database
	{
		public OnlineOrdersConnectionDB() 
			: base("OnlineOrdersConnection")
		{
			CommonConstruct();
		}

		public OnlineOrdersConnectionDB(string connectionStringName) 
			: base(connectionStringName)
		{
			CommonConstruct();
		}
		
		partial void CommonConstruct();
		
		public interface IFactory
		{
			OnlineOrdersConnectionDB GetInstance();
		}
		
		public static IFactory Factory { get; set; }
        public static OnlineOrdersConnectionDB GetInstance()
        {
			if (_instance!=null)
				return _instance;
				
			if (Factory!=null)
				return Factory.GetInstance();
			else
				return new OnlineOrdersConnectionDB();
        }

		[ThreadStatic] static OnlineOrdersConnectionDB _instance;
		
		public override void OnBeginTransaction()
		{
			if (_instance==null)
				_instance=this;
		}
		
		public override void OnEndTransaction()
		{
			if (_instance==this)
				_instance=null;
		}
        

		public class Record<T> where T:new()
		{
			public static OnlineOrdersConnectionDB repo { get { return OnlineOrdersConnectionDB.GetInstance(); } }
			public bool IsNew() { return repo.IsNew(this); }
			public object Insert() { return repo.Insert(this); }

			public void Save() { repo.Save(this); }
			public int Update() { return repo.Update(this); }

			public int Update(IEnumerable<string> columns) { return repo.Update(this, columns); }
			public static int Update(string sql, params object[] args) { return repo.Update<T>(sql, args); }
			public static int Update(Sql sql) { return repo.Update<T>(sql); }
			public int Delete() { return repo.Delete(this); }
			public static int Delete(string sql, params object[] args) { return repo.Delete<T>(sql, args); }
			public static int Delete(Sql sql) { return repo.Delete<T>(sql); }
			public static int Delete(object primaryKey) { return repo.Delete<T>(primaryKey); }
			public static bool Exists(object primaryKey) { return repo.Exists<T>(primaryKey); }
			public static bool Exists(string sql, params object[] args) { return repo.Exists<T>(sql, args); }
			public static T SingleOrDefault(object primaryKey) { return repo.SingleOrDefault<T>(primaryKey); }
			public static T SingleOrDefault(string sql, params object[] args) { return repo.SingleOrDefault<T>(sql, args); }
			public static T SingleOrDefault(Sql sql) { return repo.SingleOrDefault<T>(sql); }
			public static T FirstOrDefault(string sql, params object[] args) { return repo.FirstOrDefault<T>(sql, args); }
			public static T FirstOrDefault(Sql sql) { return repo.FirstOrDefault<T>(sql); }
			public static T Single(object primaryKey) { return repo.Single<T>(primaryKey); }
			public static T Single(string sql, params object[] args) { return repo.Single<T>(sql, args); }
			public static T Single(Sql sql) { return repo.Single<T>(sql); }
			public static T First(string sql, params object[] args) { return repo.First<T>(sql, args); }
			public static T First(Sql sql) { return repo.First<T>(sql); }
			public static List<T> Fetch(string sql, params object[] args) { return repo.Fetch<T>(sql, args); }
			public static List<T> Fetch(Sql sql) { return repo.Fetch<T>(sql); }
			public static List<T> Fetch(long page, long itemsPerPage, string sql, params object[] args) { return repo.Fetch<T>(page, itemsPerPage, sql, args); }
			public static List<T> Fetch(long page, long itemsPerPage, Sql sql) { return repo.Fetch<T>(page, itemsPerPage, sql); }
			public static List<T> SkipTake(long skip, long take, string sql, params object[] args) { return repo.SkipTake<T>(skip, take, sql, args); }
			public static List<T> SkipTake(long skip, long take, Sql sql) { return repo.SkipTake<T>(skip, take, sql); }
			public static Page<T> Page(long page, long itemsPerPage, string sql, params object[] args) { return repo.Page<T>(page, itemsPerPage, sql, args); }
			public static Page<T> Page(long page, long itemsPerPage, Sql sql) { return repo.Page<T>(page, itemsPerPage, sql); }
			public static IEnumerable<T> Query(string sql, params object[] args) { return repo.Query<T>(sql, args); }
			public static IEnumerable<T> Query(Sql sql) { return repo.Query<T>(sql); }

		}

	}
	



    

	[TableName("dbo.__MigrationHistory")]



	[PrimaryKey("MigrationId", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class __MigrationHistory : OnlineOrdersConnectionDB.Record<__MigrationHistory>  
    {



		[Column] public string MigrationId { get; set; }





		[Column] public string ContextKey { get; set; }





		[Column] public byte[] Model { get; set; }





		[Column] public string ProductVersion { get; set; }



	}

    

	[TableName("dbo.Advertisements")]



	[PrimaryKey("Id")]




	[ExplicitColumns]

    public partial class Advertisement : OnlineOrdersConnectionDB.Record<Advertisement>  
    {



		[Column] public int Id { get; set; }





		[Column] public string Image { get; set; }





		[Column] public string Key { get; set; }





		[Column] public string Description { get; set; }



	}

    

	[TableName("dbo.AspNetRoles")]



	[PrimaryKey("Id", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class AspNetRole : OnlineOrdersConnectionDB.Record<AspNetRole>  
    {



		[Column] public string Id { get; set; }





		[Column] public string Name { get; set; }



	}

    

	[TableName("dbo.AspNetUserClaims")]



	[PrimaryKey("Id")]




	[ExplicitColumns]

    public partial class AspNetUserClaim : OnlineOrdersConnectionDB.Record<AspNetUserClaim>  
    {



		[Column] public int Id { get; set; }





		[Column] public string UserId { get; set; }





		[Column] public string ClaimType { get; set; }





		[Column] public string ClaimValue { get; set; }



	}

    

	[TableName("dbo.AspNetUserLogins")]



	[PrimaryKey("LoginProvider", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class AspNetUserLogin : OnlineOrdersConnectionDB.Record<AspNetUserLogin>  
    {



		[Column] public string LoginProvider { get; set; }





		[Column] public string ProviderKey { get; set; }





		[Column] public string UserId { get; set; }



	}

    

	[TableName("dbo.AspNetUserRoles")]



	[PrimaryKey("UserId", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class AspNetUserRole : OnlineOrdersConnectionDB.Record<AspNetUserRole>  
    {



		[Column] public string UserId { get; set; }





		[Column] public string RoleId { get; set; }



	}

    

	[TableName("dbo.AspNetUsers")]



	[PrimaryKey("Id", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class AspNetUser : OnlineOrdersConnectionDB.Record<AspNetUser>  
    {



		[Column] public string Id { get; set; }





		[Column] public string Email { get; set; }





		[Column] public bool EmailConfirmed { get; set; }





		[Column] public string PasswordHash { get; set; }





		[Column] public string SecurityStamp { get; set; }





		[Column] public string PhoneNumber { get; set; }





		[Column] public bool PhoneNumberConfirmed { get; set; }





		[Column] public bool TwoFactorEnabled { get; set; }





		[Column] public DateTime? LockoutEndDateUtc { get; set; }





		[Column] public bool LockoutEnabled { get; set; }





		[Column] public int AccessFailedCount { get; set; }





		[Column] public string UserName { get; set; }



	}

    

	[TableName("dbo.Banner")]



	[PrimaryKey("Id")]




	[ExplicitColumns]

    public partial class Banner : OnlineOrdersConnectionDB.Record<Banner>  
    {



		[Column] public int Id { get; set; }





		[Column] public string Image { get; set; }





		[Column] public string Description { get; set; }





		[Column] public byte? Status { get; set; }



	}

    

	[TableName("dbo.Blog")]



	[PrimaryKey("Id")]




	[ExplicitColumns]

    public partial class Blog : OnlineOrdersConnectionDB.Record<Blog>  
    {



		[Column] public int Id { get; set; }





		[Column] public string Title { get; set; }





		[Column] public string Summary { get; set; }





		[Column] public string Content { get; set; }





		[Column] public string Image { get; set; }





		[Column] public byte? Status { get; set; }





		[Column] public int? View { get; set; }



	}

    

	[TableName("dbo.Cart")]



	[PrimaryKey("Id")]




	[ExplicitColumns]

    public partial class Cart : OnlineOrdersConnectionDB.Record<Cart>  
    {



		[Column] public int Id { get; set; }





		[Column] public double? Price { get; set; }





		[Column] public int? SizeId { get; set; }





		[Column] public int? FramesId { get; set; }





		[Column] public int? Quantity { get; set; }





		[Column] public string Image { get; set; }





		[Column] public double? TotalPrice { get; set; }





		[Column] public string CusId { get; set; }



	}

    

	[TableName("dbo.Config")]



	[PrimaryKey("Id")]




	[ExplicitColumns]

    public partial class Config : OnlineOrdersConnectionDB.Record<Config>  
    {



		[Column] public int Id { get; set; }





		[Column] public string Image { get; set; }





		[Column] public string Key { get; set; }





		[Column] public string Data { get; set; }





		[Column] public string Link { get; set; }





		[Column] public byte? Status { get; set; }



	}

    

	[TableName("dbo.Customers")]



	[PrimaryKey("CustId")]




	[ExplicitColumns]

    public partial class Customer : OnlineOrdersConnectionDB.Record<Customer>  
    {



		[Column] public int CustId { get; set; }





		[Column] public string Fname { get; set; }





		[Column] public string Lname { get; set; }





		[Column] public DateTime? Dob { get; set; }





		[Column] public bool? Gender { get; set; }





		[Column] public string Pno { get; set; }





		[Column] public string Address { get; set; }





		[Column] public string Password { get; set; }





		[Column] public byte? Status { get; set; }



	}

    

	[TableName("dbo.Frames")]



	[PrimaryKey("Id")]




	[ExplicitColumns]

    public partial class Frame : OnlineOrdersConnectionDB.Record<Frame>  
    {



		[Column] public int Id { get; set; }





		[Column] public string Frames { get; set; }





		[Column] public double Price { get; set; }





		[Column] public string Image_1 { get; set; }





		[Column] public string Image_2 { get; set; }





		[Column] public string Image_3 { get; set; }





		[Column] public string Image_4 { get; set; }





		[Column] public string Image_5 { get; set; }





		[Column] public byte? Status { get; set; }





		[Column] public int? FrameTypeId { get; set; }





		[Column] public int? View { get; set; }





		[Column] public string Note { get; set; }



	}

    

	[TableName("dbo.FrameTypes")]



	[PrimaryKey("Id", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class FrameType : OnlineOrdersConnectionDB.Record<FrameType>  
    {



		[Column] public int Id { get; set; }





		[Column] public string FrameTypes { get; set; }





		[Column] public byte? Status { get; set; }



	}

    

	[TableName("dbo.OrderDetail")]



	[PrimaryKey("Id")]




	[ExplicitColumns]

    public partial class OrderDetail : OnlineOrdersConnectionDB.Record<OrderDetail>  
    {



		[Column] public int Id { get; set; }





		[Column] public double Price { get; set; }





		[Column] public int? SizeId { get; set; }





		[Column] public int? FramesId { get; set; }





		[Column] public int Quantity { get; set; }





		[Column] public int? OrderId { get; set; }





		[Column] public string Image { get; set; }





		[Column] public double? TotalPrice { get; set; }



	}

    

	[TableName("dbo.Orders")]



	[PrimaryKey("Id")]




	[ExplicitColumns]

    public partial class Order : OnlineOrdersConnectionDB.Record<Order>  
    {



		[Column] public int Id { get; set; }





		[Column] public double TotalPrice { get; set; }





		[Column] public int? CustId { get; set; }





		[Column] public int? PaymentId { get; set; }





		[Column] public int? ShippingId { get; set; }





		[Column] public byte? Status { get; set; }





		[Column] public DateTime? CreatedAt { get; set; }





		[Column] public string UserId { get; set; }



	}

    

	[TableName("dbo.Payments")]



	[PrimaryKey("Id")]




	[ExplicitColumns]

    public partial class Payment : OnlineOrdersConnectionDB.Record<Payment>  
    {



		[Column] public int Id { get; set; }





		[Column] public string Name { get; set; }





		[Column] public string Image { get; set; }





		[Column] public byte? Status { get; set; }



	}

    

	[TableName("dbo.Role")]



	[PrimaryKey("Id")]




	[ExplicitColumns]

    public partial class Role : OnlineOrdersConnectionDB.Record<Role>  
    {



		[Column] public int Id { get; set; }





		[Column] public string Name { get; set; }





		[Column] public string Permissions { get; set; }



	}

    

	[TableName("dbo.Shipping")]



	[PrimaryKey("Id")]




	[ExplicitColumns]

    public partial class Shipping : OnlineOrdersConnectionDB.Record<Shipping>  
    {



		[Column] public int Id { get; set; }





		[Column] public string Name { get; set; }





		[Column] public double Price { get; set; }





		[Column] public byte? Status { get; set; }



	}

    

	[TableName("dbo.Size")]



	[PrimaryKey("Id")]




	[ExplicitColumns]

    public partial class Size : OnlineOrdersConnectionDB.Record<Size>  
    {



		[Column] public int Id { get; set; }





		[Column("Size")] public string _Size { get; set; }





		[Column] public double Price { get; set; }





		[Column] public byte? Status { get; set; }



	}

    

	[TableName("dbo.sysdiagrams")]



	[PrimaryKey("diagram_id")]




	[ExplicitColumns]

    public partial class sysdiagram : OnlineOrdersConnectionDB.Record<sysdiagram>  
    {



		[Column] public string name { get; set; }





		[Column] public int principal_id { get; set; }





		[Column] public int diagram_id { get; set; }





		[Column] public int? version { get; set; }





		[Column] public byte[] definition { get; set; }



	}

    

	[TableName("dbo.UserRole")]



	[PrimaryKey("UserId", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class UserRole : OnlineOrdersConnectionDB.Record<UserRole>  
    {



		[Column] public int UserId { get; set; }





		[Column] public int? RoleId { get; set; }



	}

    

	[TableName("dbo.Users")]



	[PrimaryKey("Id")]




	[ExplicitColumns]

    public partial class User : OnlineOrdersConnectionDB.Record<User>  
    {



		[Column] public int Id { get; set; }





		[Column] public string Name { get; set; }





		[Column] public string Email { get; set; }





		[Column] public string Password { get; set; }





		[Column] public string RememberToken { get; set; }



	}


}
